<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-25T09:13:11 IST" name="Default suite" finished-at="2023-10-25T09:15:33 IST" duration-ms="141622">
    <groups>
    </groups>
    <test started-at="2023-10-25T09:13:11 IST" name="Default test" finished-at="2023-10-25T09:15:33 IST" duration-ms="141622">
      <class name="com.test.ApplicationUnderTest">
        <test-method is-config="true" signature="reportSetup()[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:13:12 IST" name="reportSetup" finished-at="2023-10-25T09:13:12 IST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportSetup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:13:12 IST" name="setup" finished-at="2023-10-25T09:13:36 IST" duration-ms="24454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="login()[pri:1, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:13:36 IST" name="login" finished-at="2023-10-25T09:13:44 IST" duration-ms="7292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:13:44 IST" name="after" finished-at="2023-10-25T09:13:44 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=ApplicationUnderTest.login()[pri:1, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="dashboard()[pri:2, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:13:44 IST" name="dashboard" finished-at="2023-10-25T09:14:01 IST" depends-on-methods="com.test.ApplicationUnderTest.login" duration-ms="16934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dashboard -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:01 IST" name="after" finished-at="2023-10-25T09:14:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dashboard status=SUCCESS method=ApplicationUnderTest.dashboard()[pri:2, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="registerPatient()[pri:3, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:01 IST" name="registerPatient" finished-at="2023-10-25T09:14:02 IST" depends-on-methods="com.test.ApplicationUnderTest.dashboard" duration-ms="1648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerPatient -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:02 IST" name="after" finished-at="2023-10-25T09:14:02 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerPatient status=SUCCESS method=ApplicationUnderTest.registerPatient()[pri:3, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="patientDetails()[pri:4, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:02 IST" name="patientDetails" finished-at="2023-10-25T09:14:15 IST" depends-on-methods="com.test.ApplicationUnderTest.registerPatient" duration-ms="12748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patientDetails -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:15 IST" name="after" finished-at="2023-10-25T09:14:15 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=patientDetails status=SUCCESS method=ApplicationUnderTest.patientDetails()[pri:4, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="startVisit()[pri:5, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:15 IST" name="startVisit" finished-at="2023-10-25T09:14:56 IST" depends-on-methods="com.test.ApplicationUnderTest.patientDetails" duration-ms="41387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startVisit -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:56 IST" name="after" finished-at="2023-10-25T09:14:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=startVisit status=SUCCESS method=ApplicationUnderTest.startVisit()[pri:5, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="captureVitals()[pri:6, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:14:56 IST" name="captureVitals" finished-at="2023-10-25T09:15:25 IST" depends-on-methods="com.test.ApplicationUnderTest.startVisit" duration-ms="28737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureVitals -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:15:25 IST" name="after" finished-at="2023-10-25T09:15:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=captureVitals status=SUCCESS method=ApplicationUnderTest.captureVitals()[pri:6, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="mergeVisit()[pri:7, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:15:25 IST" name="mergeVisit" finished-at="2023-10-25T09:15:33 IST" depends-on-methods="com.test.ApplicationUnderTest.captureVitals" duration-ms="7372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mergeVisit -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:15:33 IST" name="after" finished-at="2023-10-25T09:15:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mergeVisit status=SUCCESS method=ApplicationUnderTest.mergeVisit()[pri:7, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="deletePatient()[pri:8, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:15:33 IST" name="deletePatient" finished-at="2023-10-25T09:15:33 IST" depends-on-methods="com.test.ApplicationUnderTest.mergeVisit" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePatient -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:15:33 IST" name="after" finished-at="2023-10-25T09:15:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deletePatient status=SUCCESS method=ApplicationUnderTest.deletePatient()[pri:8, instance:com.test.ApplicationUnderTest@17fc391b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.test.ApplicationUnderTest@17fc391b]" started-at="2023-10-25T09:15:33 IST" name="afterClass" finished-at="2023-10-25T09:15:33 IST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.test.ApplicationUnderTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
